##########   dein.vim  ##########
########## git setting ##########
# [[plugins]]
# repo = 'tpope/vim-fugitive'


########## fuzy finder ##########
[[plugins]]
repo = 'nvim-lua/plenary.nvim'
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
rev = '0.1.1'
hook_add = '''
  source ~/.config/nvim/plugins/telescope.rc.lua
'''



######### theme setting ##########
# [[plugins]]
# repo = 'vim-airline/vim-airline-themes'
# hook_add = '''
#   let g:airline_theme = 'codedark'
# '''

# [[plugins]]
# repo = 'vim-airline/vim-airline'
# depends = ['vim-airline-themes', 'vim-fugitive']
# hook_add = '''
#   let g:airline_powerline_fonts = 1
#   let g:airline#extensions#tabline#enabled = 1
#   let g:airline#extensions#tabline#buffer_nr_show = 1
#   let g:airline#extensions#branch#enabled=1
#   let g:airline#extensions#hunks#enabled=0
#   if !exists('g:airline_symbols')
#     let g:airline_symbols = {}
#   endif
#   let g:airline_section_a = airline#section#create(['mode', 'crypt'])
# '''


## ##### color scheem ###### ##
# [[plugins]]
# repo = 'tomasiser/vim-code-dark'
# hook_add = '''
#   autocmd! VimEnter * nested colorscheme codedark
# '''


## ##### vim file icons ##### ##
# [[plugins]]
# repo = 'ryanoasis/vim-devicons'
# [[plugins]]
# repo = 'kyazdani42/nvim-web-devicons'

########## visual support and anction support ##########
## ##### lsp setting ##### ##



## ##### auto pair ##### ##
[[plugins]]
repo = 'jiangmiao/auto-pairs'

## ##### window setting ##### ##
# [[plugins]]
# repo = 'simeji/winresizer'
# hook_add = '''
#   let g:winresizer_vert_resize = 1
#   let g:winresizer_horiz_resize = 1
# '''



# ############  Initialazation or not ...  ############ #
# Yet Another Remote Plugin Framework for Neovim
# [[plugins]]
# repo = 'roxma/nvim-yarp'
# if = '''!has('nvim')'''
# [[plugins]]
# repo = 'roxma/vim-hug-neovim-rpc'
# if = '''!has('nvim')'''
# [[plugins]]
# repo = 'neovim/python-client'
# if = '''!has('nvim')'''

# ############  Operation Optimization  ############ #
#[[plugins]]
#repo = 'Shougo/vimproc.vim'
#hook_post_update = '''
#  if dein#util#_is_windows()
#    let cmd = 'tools\\update-dll-mingw'
#  elseif dein#util#_is_cygwin()
#    let cmd = 'make -f make_cygwin.mak'
#  elseif executable('gmake')
#    let cmd = 'gmake'
#  else
#    let cmd = 'make'
#  endif
#  let g:dein#plugin.build = cmd
#'''

